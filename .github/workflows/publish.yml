name: Daily Update and Publish

on:
  schedule:
    # Runs at 15:00 UTC (23:00 UTC+8) every day, 3 hours after upstream update
    - cron: '0 15 * * *'
  workflow_dispatch:  # Allow manual triggering
  push:
    branches:
      - main

jobs:
  update-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Update submodule
        id: update
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git submodule update --remote
          if git diff --quiet HEAD; then
            echo "No changes detected in submodule"
            echo "updated=false" >> $GITHUB_OUTPUT
          else
            git add .
            git commit -m "chore: update submodule for $(date +%Y-%m-%d)"
            git push
            echo "updated=true" >> $GITHUB_OUTPUT
          fi

      - name: Get current date
        id: date
        run: echo "date=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Update version in Cargo.toml
        if: steps.update.outputs.updated == 'true'
        run: |
          sed -i "s/^version = .*/version = \"0.1.${{ steps.date.outputs.date }}\"/" Cargo.toml
          git add Cargo.toml
          git commit -m "chore: bump version to 0.1.${{ steps.date.outputs.date }}"
          git push

      - name: Install Rust toolchain
        if: steps.update.outputs.updated == 'true'
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        if: steps.update.outputs.updated == 'true'
        run: cargo build --verbose

      - name: Run tests
        if: steps.update.outputs.updated == 'true'
        run: cargo test --verbose

      - name: Create Release
        if: steps.update.outputs.updated == 'true'
        uses: softprops/action-gh-release@v1
        with:
          name: Release 0.1.${{ steps.date.outputs.date }}
          tag_name: v0.1.${{ steps.date.outputs.date }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to crates.io
        if: steps.update.outputs.updated == 'true'
        run: cargo publish --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
